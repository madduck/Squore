<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 160 160"
    fill="#111111" stroke="#111111">
    <!--
    This svg is not used as such, but converted to png files:

    fill and stroke colors: #D3D3D3, #111111

    export suffix='_black' #111111
    export suffix=''       #D3D3D3
    convert -background none -size  48x48  microphone.svg ../drawable-hdpi/microphone${suffix}.png
    convert -background none -size  64x64  microphone.svg ../drawable-xhdpi/microphone${suffix}.png
    convert -background none -size  96x96  microphone.svg ../drawable-xxhdpi/microphone${suffix}.png
    convert -background none -size  96x96  microphone.svg ../drawable-xxxhdpi/microphone${suffix}.png
    -->
    <rect id="top"  stroke="yellow" stroke-width="0"
        x="55"     y="0"
        width="50" height="100"
        rx="25"    ry="25"/>

    <path id="bowl"  stroke-width="10" fill="none" stroke-linecap="round"
        d="M40,67 c -5,64
                          85,64
                          80,0"
        />

    <path id="foot" stroke="yellow" stroke-width="0"
        d="M80,160 h+40 q  0,-15 -15,-15 h-15 v-26 h-20
                                                    v+26
                                               h-15
                              q-15,  0 -15,+15
                         h+40"/>
<!--

https://developer.android.com/training/multiscreen/screendensities

There are several density buckets available for use in your apps. Table 1 describes the different configuration qualifiers available and what screen types they apply to.

Table 1. Configuration qualifiers for different pixel densities.
Density qualifier 	Description
ldpi 	Resources for low-density                    (ldpi   ) screens (~120dpi).
mdpi 	Resources for medium-density                 (mdpi   ) screens (~160dpi). (This is the baseline density.)
hdpi 	Resources for high-density                   (hdpi   ) screens (~240dpi).
xhdpi 	Resources for extra-high-density             (xhdpi  ) screens (~320dpi).
xxhdpi 	Resources for extra-extra-high-density       (xxhdpi ) screens (~480dpi).
xxxhdpi Resources for extra-extra-extra-high-density (xxxhdpi) uses    (~640dpi).
nodpi 	Resources for all densities. These are density-independent resources. The system does not scale resources tagged with this qualifier, regardless of the current screen's density.
tvdpi 	Resources for screens somewhere between mdpi and hdpi; approximately 213dpi. This is not considered a "primary" density group. It is mostly intended for televisions and most apps shouldn't need itâ€”providing mdpi and hdpi resources is sufficient for most apps and the system will scale them as appropriate. If you find it necessary to provide tvdpi resources, you should size them at a factor of 1.33*mdpi. For example, a 100px x 100px image for mdpi screens should be 133px x 133px for tvdpi.

To create alternative bitmap drawables for different densities, you should follow the 3:4:6:8:12:16 scaling ratio between the six primary densities. For example, if you have a bitmap drawable that's 48x48 pixels for medium-density screens, all the different sizes should be:

    36x36   (0.75x)         for low-density (ldpi)
    48x48   (1.0x baseline) for medium-density (mdpi)
    72x72   (1.5x)          for high-density (hdpi)
    96x96   (2.0x)          for extra-high-density (xhdpi)
    144x144 (3.0x)          for extra-extra-high-density (xxhdpi)
    192x192 (4.0x)          for extra-extra-extra-high-density (xxxhdpi)

Then, place the generated image files in the appropriate subdirectory under res/ and the system will pick the correct one automatically based on the pixel density of the device your app is running on:

res/
  drawable-xxxhdpi/
    awesome-image.png
  drawable-xxhdpi/
    awesome-image.png
  drawable-xhdpi/
    awesome-image.png
  drawable-hdpi/
    awesome-image.png
  drawable-mdpi/
    awesome-image.png

-->
</svg>
